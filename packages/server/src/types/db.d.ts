/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>;

export interface AccountsProfiles {
    createdAt: Generated<string>;
    id: string | null;
    modifiedAt: Generated<string>;
    name: string | null;
    surname: string | null;
    user_id: string;
}

export interface AuthRoles {
    createdAt: Generated<string>;
    description: string | null;
    id: string | null;
    modifiedAt: Generated<string>;
    name: string;
}

export interface AuthRoleScopes {
    role_id: string;
    scope_id: string;
}

export interface AuthScopes {
    createdAt: Generated<string>;
    description: string | null;
    id: string | null;
    modifiedAt: Generated<string>;
    scope: string;
}

export interface AuthUserRoles {
    role_id: string;
    user_id: string;
}

export interface AuthUsers {
    active: Generated<number | null>;
    createdAt: Generated<string>;
    email: string;
    id: string | null;
    modifiedAt: Generated<string>;
    password: string;
    public_id: string;
}

export interface TimesheetsEntries {
    createdAt: Generated<string>;
    date: string;
    employee_id: string;
    end_hour: string;
    id: string | null;
    modifiedAt: Generated<string>;
    start_hour: string;
    status: Generated<string | null>;
}

export interface DB {
    accounts_profiles: AccountsProfiles;
    auth_role_scopes: AuthRoleScopes;
    auth_roles: AuthRoles;
    auth_scopes: AuthScopes;
    auth_user_roles: AuthUserRoles;
    auth_users: AuthUsers;
    timesheets_entries: TimesheetsEntries;
}
