{
    "compilerOptions": {
        "composite": true, /* Enable constraints that allow a TypeScript project to be used with project references. */
        "target": "esnext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */, /* Specify a set of bundled library declaration files that describe the target runtime environment. */
        "module": "nodenext" /* Specify what module code is generated. */,
        "rootDir": "packages/" /* Specify the root folder within your source files. */,
        "moduleResolution": "nodenext" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "baseUrl": "./", /* Specify the base directory to resolve non-relative module names. */
        "paths": {}, /* Specify a set of entries that re-map imports to additional lookup locations. */
        "resolveJsonModule": true, /* Enable importing .json files. */
        "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "declarationMap": true, /* Create sourcemaps for d.ts files. */
        "sourceMap": true, /* Create source map files for emitted JavaScript files. */
        "outDir": "./dist" /* Specify an output folder for all emitted files. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },
    "exclude": [
        "node_modules",
        "**/node_modules",
        "./*.config.ts",
        "**/dist",
        "**/test/**",
        "**/build",
        "packages/**/src"
    ],
    "references": [
        {
            "path": "./packages/server"
        },
        {
            "path": "./packages/client"
        },
    ]
}